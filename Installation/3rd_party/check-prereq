#!/bin/bash
set -x
source "${HOME3P}/utilx"
[ $? -ne 0 ] && exit 1
#
install_rpms() {
  name=`echo "$1" | awk '{sub("-[0-9.]+.*",""); print $0}'`
  name_ver=`echo "$1" | awk '{sub("\\\.(i386|x86_64|noarch)\\\.rpm$",""); print $0}'`
  case `os` in
    CentOS | RHEL )
      installed=`rpm -q "$name"`
      if [ ! "$installed" = "$name_ver" ]; then
        sudox rpm -iv --force "$@"
        [ $? -ne 0 ] && return 1
      fi
      ;;
    Ubuntu )
      installed=`dpkg --get-selections "$name" | awk '{print $1}'`
      if [ ! "$installed" = "$name" ]; then
        for rpm in $@; do
          sudox alien -i $rpm
          [ $? -ne 0 ] && return 1
        done
      fi
      ;;
    Debian )
      ;;
    openSUSE )
      ;;
    Amazon )
      ;;
    MacOS )
      ;;
  esac
  return 0
}
#
install_prog() {
  cd "$HOME3P"
  [ $? -ne 0 ] && return 1
  mkdir -p packages
  [ $? -ne 0 ] && return 1
  cd packages
  [ $? -ne 0 ] && return 1
  #
  case `os` in
    CentOS | RHEL )
      rpms=""; upd_rpms=""
      case "$1" in
        wget ) # wget is missing, get it with java wget
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="wget-1.11.4-2.el5_4.1.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="wget-1.11.4-2.el5_4.1.x86_64.rpm"
              ;;
          esac
          #
          if [ ! -s "$rpms" ]; then
            copypkg "$rpms"
            if [ $? -ne 0 ]; then
              if [ ! -s wget.class ]; then
                javac -d . ../wget.java
                [ $? -ne 0 ] && return 1
              fi
              java wget "$URL/$rpms" > "$rpms"
              [ $? -ne 0 ] && return 1
            fi
          fi
          ;;
        zip )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="zip-2.31-2.el5.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="zip-2.31-2.el5.x86_64.rpm"
              ;;
          esac
          ;;
        unzip )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="unzip-5.52-3.el5.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="unzip-5.52-3.el5.x86_64.rpm"
              ;;
          esac
          ;;
        xz )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="xz-4.999.9-0.3.beta.20091007git.el5.i386.rpm xz-libs-4.999.9-0.3.beta.20091007git.el5.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="xz-4.999.9-0.3.beta.20091007git.el5.x86_64.rpm xz-libs-4.999.9-0.3.beta.20091007git.el5.x86_64.rpm"
              ;;
          esac
          ;;
        gcc )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="gcc-4.1.2-48.el5.i386.rpm cpp-4.1.2-48.el5.i386.rpm libgomp-4.4.0-6.el5.i386.rpm"
              UPD_URL=${CENTOS_MIRROR}/centos/5/updates/i386/RPMS
              upd_rpms="glibc-devel-2.5-49.el5_5.7.i386.rpm glibc-headers-2.5-49.el5_5.7.i386.rpm kernel-headers-2.6.18-194.32.1.el5.i386.rpm glibc-2.5-49.el5_5.7.i686.rpm glibc-common-2.5-49.el5_5.7.i386.rpm nscd-2.5-49.el5_5.7.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="gcc-4.1.2-48.el5.x86_64.rpm cpp-4.1.2-48.el5.x86_64.rpm libgomp-4.4.0-6.el5.x86_64.rpm"
              UPD_URL=${CENTOS_MIRROR}/centos/5/updates/x86_64/RPMS
              upd_rpms="glibc-devel-2.5-49.el5_5.7.x86_64.rpm glibc-headers-2.5-49.el5_5.7.x86_64.rpm kernel-headers-2.6.18-194.32.1.el5.x86_64.rpm glibc-2.5-49.el5_5.7.i686.rpm glibc-2.5-49.el5_5.7.x86_64.rpm glibc-common-2.5-49.el5_5.7.x86_64.rpm nscd-2.5-49.el5_5.7.x86_64.rpm"
              ;;
          esac
          ;;
        g++ )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="gcc-c++-4.1.2-48.el5.i386.rpm gcc-4.1.2-48.el5.i386.rpm cpp-4.1.2-48.el5.i386.rpm libgomp-4.4.0-6.el5.i386.rpm libstdc++-devel-4.1.2-48.el5.i386.rpm"
              UPD_URL=${CENTOS_MIRROR}/centos/5/updates/i386/RPMS
              upd_rpms="glibc-devel-2.5-49.el5_5.7.i386.rpm glibc-headers-2.5-49.el5_5.7.i386.rpm kernel-headers-2.6.18-194.32.1.el5.i386.rpm glibc-2.5-49.el5_5.7.i686.rpm glibc-common-2.5-49.el5_5.7.i386.rpm nscd-2.5-49.el5_5.7.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="gcc-c++-4.1.2-48.el5.x86_64.rpm gcc-4.1.2-48.el5.x86_64.rpm cpp-4.1.2-48.el5.x86_64.rpm libgomp-4.4.0-6.el5.x86_64.rpm libstdc++-devel-4.1.2-48.el5.x86_64.rpm"
              UPD_URL=${CENTOS_MIRROR}/centos/5/updates/x86_64/RPMS
              upd_rpms="glibc-devel-2.5-49.el5_5.7.x86_64.rpm glibc-headers-2.5-49.el5_5.7.x86_64.rpm kernel-headers-2.6.18-194.32.1.el5.x86_64.rpm glibc-2.5-49.el5_5.7.i686.rpm glibc-2.5-49.el5_5.7.x86_64.rpm glibc-common-2.5-49.el5_5.7.x86_64.rpm nscd-2.5-49.el5_5.7.x86_64.rpm"
              ;;
          esac
          ;;
        yacc )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              #rpms="flex-2.5.4a-41.fc6.i386.rpm bison-2.3-2.1.i386.rpm"
              rpms="byacc-1.9-29.2.2.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              #rpms="flex-2.5.4a-41.fc6.x86_64.rpm bison-2.3-2.1.x86_64.rpm"
              rpms="byacc-1.9-29.2.2.x86_64.rpm"
              ;;
          esac
          ;;
        perl-dbi )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="perl-DBI-1.52-2.el5.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="perl-DBI-1.52-2.el5.x86_64.rpm"
              ;;
          esac
          ;;
        git ) 
          case `arch` in
            i386 )
              URL=http://packages.sw.be/git
              rpms="git-1.7.3-1.el5.rf.i386.rpm perl-Git-1.7.3-1.el5.rf.i386.rpm"
              ;;
            x86_64 )
              URL=http://packages.sw.be/git
              rpms="git-1.7.3-1.el5.rf.x86_64.rpm perl-Git-1.7.3-1.el5.rf.x86_64.rpm"
              ;;
          esac
          ;;
        jam ) 
          case `arch` in
            i386 )
              URL=${EPEL_MIRROR}/epel/5/i386
              rpms="jam-2.5-4.el5.i386.rpm"
              ;;
            x86_64 )
              URL=${EPEL_MIRROR}/epel/5/x86_64
              rpms="jam-2.5-4.el5.x86_64.rpm"
              ;;
          esac
          ;;
        yasm ) 
          case `arch` in
            i386 )
              URL=http://packages.sw.be/yasm
              rpms="yasm-1.0.1-1.el5.rf.i386.rpm"
              ;;
            x86_64 )
              URL=http://packages.sw.be/yasm
              rpms="yasm-1.0.1-1.el5.rf.x86_64.rpm"
              ;;
          esac
          ;;
        ImageMagick )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="ImageMagick-6.2.8.0-4.el5_1.1.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="ImageMagick-6.2.8.0-4.el5_1.1.x86_64.rpm"
              ;;
          esac
          ;;
        automake )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="automake-1.9.6-2.3.el5.noarch.rpm autoconf-2.59-12.noarch.rpm imake-1.0.2-3.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="automake-1.9.6-2.3.el5.noarch.rpm autoconf-2.59-12.noarch.rpm imake-1.0.2-3.x86_64.rpm"
              ;;
          esac
          ;;
        gsl-devel )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="gsl-devel-1.13-3.el5.i386.rpm gsl-1.13-3.el5.i386.rpm pkgconfig-0.21-2.el5.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="gsl-devel-1.13-3.el5.i386.rpm gsl-devel-1.13-3.el5.x86_64.rpm gsl-1.13-3.el5.i386.rpm gsl-1.13-3.el5.x86_64.rpm pkgconfig-0.21-2.el5.x86_64.rpm"
              ;;
          esac
          ;;
        desktop-file-utils )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="desktop-file-utils-0.10-7.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="desktop-file-utils-0.10-7.x86_64.rpm"
              ;;
          esac
          ;;
        gmp )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="gmp-4.1.4-10.el5.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="gmp-4.1.4-10.el5.x86_64.rpm"
              ;;
          esac
          ;;
        zlib-devel )
          case `arch` in
            i386 )
              URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
              rpms="zlib-devel-1.2.3-3.i386.rpm"
              ;;
            x86_64 )
              URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
              rpms="zlib-devel-1.2.3-3.x86_64.rpm"
              ;;
          esac
          ;;
        * )
          echo "Don't know how to install $1 on `os`" 1>&2
          return 1
          ;;
      esac
      for rpm in $rpms; do
        if [ ! -s "$rpm" ]; then
          copypkg "$rpm"
          if [ $? -ne 0 ]; then
            wget -4O "$rpm" "$URL/$rpm"
            if [ $? -ne 0 ]; then
              rm -f "$rpm"
              return 1
            fi
          fi
        fi
      done
      for upd_rpm in $upd_rpms; do
        if [ ! -s "$upd_rpm" ]; then
          copypkg "$upd_rpm"
          if [ $? -ne 0 ]; then
            wget -4O "$upd_rpm" "$UPD_URL/$upd_rpm"
            if [ $? -ne 0 ]; then
              rm -f "$upd_rpm"
              return 1
            fi
          fi
        fi
      done
      install_rpms $rpms $upd_rpms
      [ $? -ne 0 ] && return 1
      ;;
    Ubuntu )
      case "$1" in
        xz ) prog=xz-utils ;;
      # yacc ) prog="flex bison" ;;
        yacc ) prog=byacc ;;
        perl-dbi ) prog=libdbi-perl ;;
        git ) prog=git-core ;;
        ImageMagick ) prog=imagemagick ;;
        gsl-devel ) prog=libgsl0-dev ;;
        gmp ) prog=libgmp3c2 ;;
        zlib-devel ) prog=zlib1g-dev ;;
        * ) prog="$1" ;;
      esac
      sudox apt-get -y install $prog
      [ $? -ne 0 ] && return 1
      ;;
    Debian )
      ;;
    openSUSE )
      ;;
    Amazon )
      ;;
    MacOS )
      case "$1" in
        * ) prog="$1" ;;
      esac
      sudox port install $prog
      [ $? -ne 0 ] && return 1
      ;;
  esac
  return 0
}
#
install_macports() {
  cd "$HOME3P"
  [ $? -ne 0 ] && return 1
  mkdir -p packages
  [ $? -ne 0 ] && return 1
  cd packages
  [ $? -ne 0 ] && return 1
  #
  URL=http://distfiles.macports.org/MacPorts
  dmg=MacPorts-1.9.2-10.6-SnowLeopard.dmg
  if [ ! -s "$dmg" ]; then
    copypkg "$dmg"
    if [ $? -ne 0 ]; then
      if [ ! -s wget.class ]; then
        javac -d . ../wget.java
        [ $? -ne 0 ] && return 1
      fi
      java wget "$URL/$dmg" > "$dmg"
      [ $? -ne 0 ] && return 1
    fi
  fi
  #
  sudox hdiutil attach "$dmg"
  [ $? -ne 0 ] && return 1
  # mounted to /Volumes/MacPorts-1.9.2
  sudox installer -pkg "/Volumes/MacPorts-1.9.2/MacPorts-1.9.2.pkg" -target /
  [ $? -ne 0 ] && return 1
  # installed to /opt/local/bin/port
  sudox hdiutil detach "/Volumes/MacPorts-1.9.2"
  [ $? -ne 0 ] && return 1
# sudox port -v selfupdate
# [ $? -ne 0 -a $? -ne 25 ] && return 1
  return 0
}
#
macports_version() {
  port version | awk '{ n = split($2, a, "."); v = 0;
    if (n == 1) { v = a[1] * 100; }
    else if (n == 2) { v = a[1] * 100 + a[2] * 10; }
    else if (n == 3) { v = a[1] * 100 + a[2] * 10 + a[3]; }
    print v }'
  [ ${PIPESTATUS[0]} -ne 0 -o ${PIPESTATUS[1]} -ne 0 ] && return 1
  return 0
}
#
install_git() {
  cd "$HOME3P"
  [ $? -ne 0 ] && return 1
  mkdir -p packages
  [ $? -ne 0 ] && return 1
  cd packages
  [ $? -ne 0 ] && return 1
  #
  URL=http://git-osx-installer.googlecode.com/files
  dmg=git-1.6.5.1-UNIVERSALbinary-leopard.dmg
  if [ ! -s "$dmg" ]; then
    copypkg "$dmg"
    if [ $? -ne 0 ]; then
      if [ ! -s wget.class ]; then
        javac -d . ../wget.java
        [ $? -ne 0 ] && return 1
      fi
      java wget "$URL/$dmg" > "$dmg"
      [ $? -ne 0 ] && return 1
    fi
  fi
  #
  sudox hdiutil attach "$dmg"
  [ $? -ne 0 ] && return 1
  # mounted to /Volumes/Git 1.6.5.1 UNIVERSAL binary Leopard
  sudox installer -pkg "/Volumes/Git 1.6.5.1 UNIVERSAL binary Leopard/git-1.6.5.1-UNIVERSALbinary-leopard.pkg" -target /
  [ $? -ne 0 ] && return 1
  # installed to /usr/local/git/bin/git
  sudox mkdir -p /usr/local/bin
  [ $? -ne 0 ] && return 1
  sudox ln -fs /usr/local/git/bin/git /usr/local/bin/git
  [ $? -ne 0 ] && return 1
  sudox ln -fs /usr/local/git/bin/git-cvsserver /usr/local/bin/git-cvsserver
  [ $? -ne 0 ] && return 1
  sudox ln -fs /usr/local/git/bin/git-receive-pack /usr/local/bin/git-receive-pack
  [ $? -ne 0 ] && return 1
  sudox ln -fs /usr/local/git/bin/git-shell /usr/local/bin/git-shell
  [ $? -ne 0 ] && return 1
  sudox ln -fs /usr/local/git/bin/git-upload-archive /usr/local/bin/git-upload-archive
  [ $? -ne 0 ] && return 1
  sudox ln -fs /usr/local/git/bin/git-upload-pack /usr/local/bin/git-upload-pack
  [ $? -ne 0 ] && return 1
  sudox ln -fs /usr/local/git/bin/gitk /usr/local/bin/gitk
  [ $? -ne 0 ] && return 1
  sudox hdiutil detach "/Volumes/Git 1.6.5.1 UNIVERSAL binary Leopard"
  [ $? -ne 0 ] && return 1
# sudox port -v selfupdate
# [ $? -ne 0 -a $? -ne 25 ] && return 1
  return 0
}
#
preinstall_scons() {
  cd "$HOME3P/base_libs/scons"
  [ $? -ne 0 ] && return 1
  #
  case `os` in
    CentOS | RHEL | Ubuntu | Debian | openSUSE | Amazon )
      download .
      [ $? -ne 0 ] && return 1
      ./linux-compile
      [ $? -ne 0 ] && return 1
      ;;
    MacOS )
      ;;
  esac
  return 0
}
#
check_prereq() {
  case `os` in
    CentOS | RHEL )
      chkprog wget    || install_prog wget     || return 1
      chkprog zip     || install_prog zip      || return 1
      chkprog unzip   || install_prog unzip    || return 1
      chkprog xz      || install_prog xz       || return 1
      chkprog gcc     || install_prog gcc      || return 1
      chkprog g++     || install_prog g++      || return 1
      chkprog yacc    || install_prog yacc     || return 1
      # this was reported as missing on some systems and is needed by git
      chkprog dbiprof || install_prog perl-dbi || return 1
      chkprog git     || install_prog git      || return 1
      # These are needed for Windows compile
      chkprog jam     || install_prog jam      || return 1
      chkprog yasm    || install_prog yasm     || return 1
      chkprog scons   || preinstall_scons      || return 1
      #fix_scons || return 1
      #
      # convert (part of ImageMagick) is needed by ocropus_libs/iulib
      #chkprog convert || install_prog ImageMagick  || return 1
      #
      # automake is missing on some systems and is needed by gsl-devel
      chkprog automake   || install_prog automake  || return 1
      # gsl-devel is needed by ocropus
      chkprog gsl-config || install_prog gsl-devel || return 1
      #
      # desktop-file-utils is needed by some versions of rpmlint
      chkprog desktop-file-install || install_prog desktop-file-utils || return 1
      #
      # libgmp is missing on some systems and is needed by mingw32-gcc
      chklib gmp || install_prog gmp || return 1
      #
      if [ ! -f /usr/include/zlib.h ]; then
        install_prog zlib-devel || return 1
      fi
      ;;
    Ubuntu )
      sudox apt-get update || return 1
      #
      chkprog wget    || install_prog wget     || return 1
      chkprog zip     || install_prog zip      || return 1
      chkprog unzip   || install_prog unzip    || return 1
      chkprog alien   || install_prog alien    || return 1
      chkprog gcc     || install_prog gcc      || return 1
      chkprog g++     || install_prog g++      || return 1
      chkprog yacc    || install_prog yacc     || return 1
      chkprog patch   || install_prog patch    || return 1
      # this was reported as missing on some systems and is needed by git
      chkprog dbiprof || install_prog perl-dbi || return 1
      chkprog git     || install_prog git      || return 1
      # These are needed for Windows compile
      chkprog jam     || install_prog jam      || return 1
      chkprog yasm    || install_prog yasm     || return 1
      chkprog scons   || preinstall_scons      || return 1
      #fix_scons || return 1
      #
      # convert (part of ImageMagick) is needed by ocropus_libs/iulib
      #chkprog convert || install_prog ImageMagick  || return 1
      #
      # automake is missing on some systems and is needed by gsl-devel
      chkprog automake   || install_prog automake  || return 1
      # gsl-devel is needed by ocropus
      chkprog gsl-config || install_prog gsl-devel || return 1
      #
      # desktop-file-utils is needed by some versions of rpmlint
      chkprog desktop-file-install || install_prog desktop-file-utils || return 1
      #
      # libgmp is missing on some systems and is needed by mingw32-gcc
      chklib gmp || install_prog gmp || return 1
      #
      if [ ! -f /usr/include/zlib.h ]; then
        install_prog zlib-devel || return 1
      fi
      ;;
    Debian )
      ;;
    openSUSE )
      ;;
    Amazon )
      ;;
    MacOS )
      chkprog port  || install_macports   || return 1
      if [ `macports_version` -lt 192 ]; then
        echo "Mac ports version is too old - should be at least 1.9.2 or greater" 1>&2
        return 1
      fi
      #
      LOGFILE=`mktemp /tmp/${0##*/}-patch.log.XXXXX`
      sudox patch -N /opt/local/etc/macports/sources.conf "${HOME3P}/sources.conf.patch" 2>&1 | tee $LOGFILE
      if [ ${PIPESTATUS[0]} -ne 0 ]; then
        grep "Reversed .* patch detected!" $LOGFILE >/dev/null
        [ $? -ne 0 ] && return 1
      fi
      mkdir -p /Users/Shared/dports
      [ $? -ne 0 ] && return 1
      portindex -f /Users/Shared/dports
      [ $? -ne 0 ] && return 1
      #
      sudox port -v selfupdate
      [ $? -ne 0 -a $? -ne 25 ] && return 1
      #
      chkprog wget  || install_prog wget  || return 1
      chkprog git   || install_git        || return 1
      #
      # convert (part of ImageMagick) is needed by ocropus_libs/iulib
      #chkprog convert || install_prog ImageMagick  || return 1
      #if [ ! -x /usr/bin/convert ]; then
      #  sudox ln -fs /opt/local/bin/convert /usr/bin/convert
      #  [ $? -ne 0 ] && return 1
      #fi
      ;;
  esac
  return 0
}
#
install_mingw32() {
  cd "$HOME3P"
  [ $? -ne 0 ] && return 1
  mkdir -p packages
  [ $? -ne 0 ] && return 1
  cd packages
  [ $? -ne 0 ] && return 1
  #
  case `os` in
    CentOS | RHEL | Ubuntu )
      rpms=""
      case `arch` in
        i386 )
          URL=${EPEL_MIRROR}/epel/5/i386
          rpms="mingw32-gcc-4.3.2-12.el5.i386.rpm mingw32-binutils-2.19-3.el5.i386.rpm mingw32-cpp-4.3.2-12.el5.i386.rpm mingw32-filesystem-56-1.el5.noarch.rpm mingw32-runtime-3.15.1-10.el5.noarch.rpm mingw32-w32api-3.12-8.el5.noarch.rpm rpmlint-0.94-2.el5.noarch.rpm"
          ;;
        x86_64 )
          URL=${EPEL_MIRROR}/epel/5/x86_64
          rpms="mingw32-gcc-4.3.2-12.el5.x86_64.rpm mingw32-binutils-2.19-3.el5.x86_64.rpm mingw32-cpp-4.3.2-12.el5.x86_64.rpm mingw32-filesystem-56-1.el5.noarch.rpm mingw32-runtime-3.15.1-10.el5.noarch.rpm mingw32-w32api-3.12-8.el5.noarch.rpm rpmlint-0.94-2.el5.noarch.rpm"
          ;;
      esac
      for rpm in $rpms; do
        if [ ! -s "$rpm" ]; then
          copypkg "$rpm"
          if [ $? -ne 0 ]; then
            wget -4O "$rpm" "$URL/$rpm"
            if [ $? -ne 0 ]; then
              rm -f "$rpm"
              return 1
            fi
          fi
        fi
      done
      install_rpms $rpms
      [ $? -ne 0 ] && return 1
      #
      rpms=""
      case `arch` in
        i386 )
          URL=${EPEL_MIRROR}/epel/5/i386
          rpms="mingw32-gcc-c++-4.3.2-12.el5.i386.rpm"
          ;;
        x86_64 )
          URL=${EPEL_MIRROR}/epel/5/x86_64
          rpms="mingw32-gcc-c++-4.3.2-12.el5.x86_64.rpm"
          ;;
      esac
      for rpm in $rpms; do
        if [ ! -s "$rpm" ]; then
          copypkg "$rpm"
          if [ $? -ne 0 ]; then
            wget -4O "$rpm" "$URL/$rpm"
            if [ $? -ne 0 ]; then
              rm -f "$rpm"
              return 1
            fi
          fi
        fi
      done
      install_rpms $rpms
      [ $? -ne 0 ] && return 1
      #
      URL=http://downloads.sourceforge.net/project/mingw/MinGW/BaseSystem/RuntimeLibrary/Win32-API/w32api-3.15
      pkg=w32api-3.15-1-mingw32-dev.tar.lzma
      if [ ! -s "$pkg" -a ! -s "${pkg%.lzma}" ]; then
        copypkg "$pkg"
        if [ $? -ne 0 ]; then
          wget -4O "$pkg" "$URL/$pkg"
          if [ $? -ne 0 ]; then
            rm -f "$pkg"
            return 1
          fi
        fi
      fi
      if [ ! -s "${pkg%.lzma}" ]; then
        xz -d "$pkg"
        [ $? -ne 0 ] && return 1
      fi
      cd $MINGW32_PREFIX
      [ $? -ne 0 ] && return 1
      sudox tar -xvf "${HOME3P}/packages/w32api-3.15-1-mingw32-dev.tar"
      [ $? -ne 0 ] && return 1
      ;;
    Debian )
      ;;
    openSUSE )
      ;;
    Amazon )
      ;;
    MacOS )
      ;;
  esac
  return 0
}
#
fix_libs() {
  cd "$HOME3P"
  [ $? -ne 0 ] && return 1
  mkdir -p packages
  [ $? -ne 0 ] && return 1
  cd packages
  [ $? -ne 0 ] && return 1
  #
  case `os` in
    CentOS | RHEL | Ubuntu | Debian | openSUSE | Amazon )
      #
      # Install patchelf 0.5
      #
      if [ ! "`patchelf --version 2>/dev/null`" = "patchelf 0.5" ]; then
        #original, but now defunct
        #URL=http://hydra.nixos.org/build/114505/download/3
        #pkg=patchelf-0.5.tar.gz
        URL=http://www.mirrorservice.org/sites/www.ibiblio.org/gentoo/distfiles
        pkg=patchelf-0.5.tar.bz2
        if [ ! -s "$pkg" ]; then
          copypkg "$pkg"
          if [ $? -ne 0 ]; then
            wget -4O "$pkg" "$URL/$pkg"
            if [ $? -ne 0 ]; then
              rm -f "$pkg"
              return 1
            fi
          fi
        fi
        bzip2 -dc "$pkg" | tar -xv
        [ ${PIPESTATUS[0]} -ne 0 -o ${PIPESTATUS[1]} -ne 0 ] && exit 1
        cd patchelf-0.5
        [ $? -ne 0 ] && return 1
        ./configure
        [ $? -ne 0 ] && return 1
        sudox make install
        [ $? -ne 0 ] && return 1
      fi
      ;;
    MacOS )
      ;;
  esac
  #
  case `os` in
    CentOS | RHEL )
      # Check & set /usr/local/lib in LD_LIBRARY_PATH
      grep '/usr/local/lib' /etc/ld.so.conf.d/* >/dev/null
      if [ $? -ne 0 ]; then
        cat > local.conf << EOF
/usr/local/lib
EOF
        [ $? -ne 0 ] && return 1
        if [ -s /etc/ld.so.conf.d/local.conf ]; then
          echo "File /etc/ld.so.conf.d/local.conf already exists" 1>&2
          rm -f local.conf
          return 1
        fi
        sudox cp local.conf /etc/ld.so.conf.d
        [ $? -ne 0 ] && return 1
        rm -f local.conf
        [ $? -ne 0 ] && return 1
      fi
      sudox /sbin/ldconfig
      [ $? -ne 0 ] && return 1
      ;;
    Ubuntu )
      if [ ! -d /usr/libx ]; then
        case `arch` in
          i386 )
            URL=${CENTOS_MIRROR}/centos/5/os/i386/CentOS
            rpm=gmp-4.1.4-10.el5.i386.rpm
            ;;
          x86_64 )
            URL=${CENTOS_MIRROR}/centos/5/os/x86_64/CentOS
            rpm=gmp-4.1.4-10.el5.x86_64.rpm
            ;;
        esac
        if [ ! -s "$rpm" ]; then
          copypkg "$rpm"
          if [ $? -ne 0 ]; then
            wget -4O "$rpm" "$URL/$rpm"
            if [ $? -ne 0 ]; then
              rm -f "$rpm"
              return 1
            fi
          fi
        fi
        rpm2cpio "$rpm" | cpio -i -dmuv
        [ ${PIPESTATUS[0]} -ne 0 -o ${PIPESTATUS[1]} -ne 0 ] && exit 1
        case `arch` in
          i386 )
            sudox mv usr/lib /usr/libx
            [ $? -ne 0 ] && return 1
            ;;
          x86_64 )
            sudox mv usr/lib64 /usr/libx
            [ $? -ne 0 ] && return 1
            ;;
        esac
        rm -fr usr
        [ $? -ne 0 ] && return 1
        cd /usr/libexec/gcc/i686-pc-mingw32/4.3.2
        [ $? -ne 0 ] && return 1
        if [ -s cc1 ]; then
          sudox patchelf --set-rpath /usr/libx:/usr/lib:/lib cc1
          [ $? -ne 0 ] && return 1
        fi
        if [ -s cc1plus ]; then
          sudox patchelf --set-rpath /usr/libx:/usr/lib:/lib cc1plus
          [ $? -ne 0 ] && return 1
        fi
      fi
      #
      # Check & set /usr/local/lib in LD_LIBRARY_PATH
      grep '/usr/local/lib' /etc/ld.so.conf.d/* >/dev/null
      if [ $? -ne 0 ]; then
        cat > local.conf << EOF
/usr/local/lib
EOF
        [ $? -ne 0 ] && return 1
        if [ -s /etc/ld.so.conf.d/local.conf ]; then
          echo "File /etc/ld.so.conf.d/local.conf already exists" 1>&2
          rm -f local.conf
          return 1
        fi
        sudox cp local.conf /etc/ld.so.conf.d
        [ $? -ne 0 ] && return 1
        rm -f local.conf
        [ $? -ne 0 ] && return 1
      fi
      sudox /sbin/ldconfig
      [ $? -ne 0 ] && return 1
      ;;
    Debian )
      ;;
    openSUSE )
      ;;
    Amazon )
      ;;
    MacOS )
      ;;
  esac
  return 0
}
#
case `os` in
  CentOS | RHEL | Ubuntu | Debian | openSUSE | Amazon | MacOS )
    ;;
  * )
    echo "Unsupported operating system: `os`" 1>&2
    exit 1
    ;;
esac
#
case `arch` in
  i386 | x86_64 )
    ;;
  * )
    echo "Unsupported architecture: `arch`" 1>&2
    exit 1
    ;;
esac
#
check_prereq    || exit 1
install_mingw32 || exit 1
fix_libs        || exit 1
#
exit 0
